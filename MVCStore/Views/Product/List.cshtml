@using MVCStore.Models
@using MVCStore.MvcHelpers
@model ProductListViewModel
@*@model IEnumerable<MVCStore.Domain.Core.Product>*@
@{
    ViewBag.Title = "List";
}

<h2>Products</h2>
<p>
    @Html.ActionLink("Add new Product", "Create","Product", null,
    new { @class = "btn btn-block btn-success btn-sm" })
</p>
<table class="table">
    
   @*<tr>
        <th>
            @Html.DisplayNameFor(model => model.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th></th>
    </tr>*@

    @foreach (var item in Model.Products)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>*@
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @*@Html.ActionLink("Details", "Details", new { id = item.Id }) |*@
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<div class="btn-group pull-right">
    @Html.PageLinks(Model.PagingInfo, x => Url.Action("List",
        new { page = x, category = Model.CurrentCategory }))
</div>